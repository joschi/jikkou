<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Jikkou â€“ Introduction</title><link>https://streamthoughts.github.io/jikkou/docs/introducion/</link><description>Recent content in Introduction on Jikkou</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://streamthoughts.github.io/jikkou/docs/introducion/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Quickstart Guide</title><link>https://streamthoughts.github.io/jikkou/docs/introducion/getting_started/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://streamthoughts.github.io/jikkou/docs/introducion/getting_started/</guid><description>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;p>The following prerequisites are required for a successful and properly use of Jikkou.&lt;/p>
&lt;ul>
&lt;li>An Apache Kafka cluster.&lt;/li>
&lt;li>Installing and configuring Jikkou.&lt;/li>
&lt;li>Java&lt;/li>
&lt;/ul>
&lt;h2 id="deploy-a-local-apache-kafka-broker-or-have-access-to-a-cluster">Deploy a local Apache Kafka broker or have access to a cluster&lt;/h2>
&lt;p>You must have access to an Apache Kafka cluster for using Jikkou.
Most of the time, the latest version of Jikkou is always built for working with the most recent version of Apache Kafka.&lt;/p>
&lt;p>To quickly deploy a local Apache Kafka cluster :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ git clone https://github.com/streamthoughts/jikkou
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ &lt;span style="color:#204a87">cd&lt;/span> jikkou
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ./up &lt;span style="color:#8f5902;font-style:italic"># use ./down for stopping the docker-compose stack&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="install-jikkou">Install Jikkou&lt;/h2>
&lt;p>Download the latest distribution version of the Jikkou client. You can look at the official &lt;a href="https://github.com/streamthoughts/jikkou/releases">releases page&lt;/a>.&lt;/p>
&lt;p>For more details, or for other options, see the &lt;a href="./_installation.md">installation&lt;/a> guide.&lt;/p>
&lt;h2 id="describe-broker-settings">Describe Broker Settings&lt;/h2>
&lt;ul>
&lt;li>First, let&amp;rsquo;s run the following command to describe the configuration of brokers :&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ jikkou --bootstrap-servers localhost:9092 brokers describe
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>If you succeed to connect to your cluster, then the command should return an output similar to:&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>(output)&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">---&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;1&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">annotations&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">generated&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;2022-06-12T00:00:00.000000000Z&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">labels&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>{}&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">brokers&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">id&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;1&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">host&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;localhost&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">port&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">9092&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">configs&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">advertised.listeners&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;PLAINTEXT://kafka-broker:29092,PLAINTEXT_HOST://localhost:9092&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">broker.id&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;1&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">group.initial.rebalance.delay.ms&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;0&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">listener.security.protocol.map&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">listeners&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">log.dirs&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;/var/lib/kafka/data&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">offsets.topic.replication.factor&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;1&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">zookeeper.connect&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;zookeeper:2181&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">topics&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">[]&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">quotas&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">[]&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="add-topics">Add Topics&lt;/h2>
&lt;p>Now, let&amp;rsquo;s create some topics on our Apache Kafka cluster. To do this, create a &lt;code>topics.yaml&lt;/code> file with the following content:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">topics&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#39;jikkou-demo-my-first-topic&amp;#39;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">partitions&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">replication_factor&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">configs&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">cleanup.policy&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#39;compact&amp;#39;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#39;jikkou-demo-my-second-topic&amp;#39;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">partitions&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">5&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">replication_factor&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">configs&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">cleanup.policy&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#39;delete&amp;#39;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then, run the following Jikkou command to trigger the topic creation on the cluster:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ jikkou --bootstrap-servers localhost:9092 &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> topics &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> create &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --files ./topics.yaml &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --include &lt;span style="color:#4e9a06">&amp;#34;jikkou-demo-.*&amp;#34;&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --verbose &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --yes
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In the above command, we choose to use the &lt;code>create&lt;/code> subcommand to create the new topics.
But we could just as well use the &lt;code>apply&lt;/code> subcommand to obtain the same result.&lt;/p>
&lt;p>In addition, we use the &lt;code>--includes&lt;/code> option to limit the resources that will be selected by Jikkou to determine the changes to apply.&lt;/p>
&lt;p>&lt;strong>(output)&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>TASK [CREATE] Create a new topic jikkou-demo-my-first-topic (partitions=1, replicas=1) - CHANGED ********
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;changed&amp;#34; : true,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;end&amp;#34; : 1655125593974,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;resource&amp;#34; : {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;name&amp;#34; : &amp;#34;jikkou-demo-my-first-topic&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;operation&amp;#34; : &amp;#34;ADD&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;partitions&amp;#34; : {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;after&amp;#34; : 1,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;operation&amp;#34; : &amp;#34;ADD&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;replication_factor&amp;#34; : {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;after&amp;#34; : 1,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;operation&amp;#34; : &amp;#34;ADD&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;configs&amp;#34; : {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;cleanup.policy&amp;#34; : {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;after&amp;#34; : &amp;#34;compact&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;operation&amp;#34; : &amp;#34;ADD&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;failed&amp;#34; : false,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;status&amp;#34; : &amp;#34;CHANGED&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>TASK [CREATE] Create a new topic jikkou-demo-my-second-topic (partitions=5, replicas=1) - CHANGED *******
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;changed&amp;#34; : true,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;end&amp;#34; : 1655125593974,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;resource&amp;#34; : {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;name&amp;#34; : &amp;#34;jikkou-demo-my-second-topic&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;operation&amp;#34; : &amp;#34;ADD&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;partitions&amp;#34; : {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;after&amp;#34; : 5,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;operation&amp;#34; : &amp;#34;ADD&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;replication_factor&amp;#34; : {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;after&amp;#34; : 1,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;operation&amp;#34; : &amp;#34;ADD&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;configs&amp;#34; : {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;cleanup.policy&amp;#34; : {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;after&amp;#34; : &amp;#34;delete&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;operation&amp;#34; : &amp;#34;ADD&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;failed&amp;#34; : false,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;status&amp;#34; : &amp;#34;CHANGED&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>EXECUTION in 2s 301ms
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ok : 0, created : 2, altered : 0, deleted : 0 failed : 0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="describe-topics">Describe Topics&lt;/h2>
&lt;p>After that, you can describe the topics previously created using the &lt;code>describe&lt;/code> sub-command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ jikkou --bootstrap-servers localhost:9092 &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> topics &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> describe &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --include &lt;span style="color:#4e9a06">&amp;#34;jikkou-demo-.*&amp;#34;&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --default-configs
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In the command above, we use the &lt;code>-default-configs&lt;/code> to export built-in default configuration for configs that have a default value.&lt;/p>
&lt;h2 id="remove-topics">Remove Topics&lt;/h2>
&lt;p>Finally, let&amp;rsquo;s empty the &lt;code>topics.yaml&lt;/code> file to remove all the topics previously created :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">topics&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And run the following command using &lt;code>dry-run&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ jikkou --bootstrap-servers localhost:9092 &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> topics &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> apply &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --files ./topics.yaml &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --include &lt;span style="color:#4e9a06">&amp;#34;jikkou-demo-.*&amp;#34;&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --verbose &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --delete-topic-orphans &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --dry-run
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The command should prompt that the previously created topics should be deleted. Indeed, Jikkou will detect that some topics that exist on our cluster and that match our predicate are no longer defined in our input files.&lt;/p>
&lt;p>You now re-execute the above command without the dry-run to definitively delete the topics.&lt;/p>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Recommendation&lt;/h4>
When working on a production environment, we highly recommend to always run the &lt;code>apply&lt;/code> or &lt;code>delete&lt;/code> command with the &lt;code>--include&lt;/code> or &lt;code>--exclude&lt;/code> options to make sure to not remove any topics by accident.
Furthermore, always run your command in &lt;code>--dry-run&lt;/code> mode to check for changes that will be executed by Jikkou before proceeding.
&lt;/div>
&lt;h2 id="reading-the-help">Reading the Help&lt;/h2>
&lt;p>To learn more about the available Jikkou commands, use &lt;code>jikkou help&lt;/code> or type a command followed by the &lt;code>-h&lt;/code> flag:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ jikkou topics -h
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: Installing Jikkou</title><link>https://streamthoughts.github.io/jikkou/docs/introducion/installation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://streamthoughts.github.io/jikkou/docs/introducion/installation/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>Jikkou can be installed either from source, or from releases.&lt;/p>
&lt;/div>
&lt;h2 id="from-the-jikkou-project">From The Jikkou Project&lt;/h2>
&lt;h3 id="releases">Releases&lt;/h3>
&lt;p>Every &lt;a href="https://github.com/streamthoughts/jikkou/releases">&lt;code>release&lt;/code>&lt;/a> released versions of Jikkou is available:&lt;/p>
&lt;ul>
&lt;li>As a zip/tar.gz package from &lt;a href="https://github.com/streamthoughts/jikkou/releases/tag/v0.12.2">GitHub Releases&lt;/a>&lt;/li>
&lt;li>As a fatJar available from &lt;a href="https://repo.maven.apache.org/maven2/io/streamthoughts/jikkou/0.12.2/">Maven Central&lt;/a>&lt;/li>
&lt;li>As a docker image available from &lt;a href="https://hub.docker.com/r/streamthoughts/jikkou">Docker Hub&lt;/a>.&lt;/li>
&lt;li>As a Debian package from &lt;a href="https://github.com/streamthoughts/jikkou/releases/tag/v0.12.2">GitHub Releases&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>These are the official ways to get Jikkou releases that you manually downloaded and installed.&lt;/p>
&lt;h4 id="install-from-tarball-distribution">Install From Tarball distribution&lt;/h4>
&lt;ol>
&lt;li>Download your desired &lt;a href="https://github.com/streamthoughts/jikkou/releases">version&lt;/a>&lt;/li>
&lt;li>Unpack it (&lt;code>tar -zxvf jikkou-0.12.2-runner.tar.gz&lt;/code>)&lt;/li>
&lt;li>Move the unpacked directory to its desired destination (&lt;code>mv jikkou-0.12.2-runner /opt&lt;/code>)&lt;/li>
&lt;li>Add the executable to your PATH (&lt;code>export PATH=$PATH:/opt/jikkou/bin&lt;/code>)&lt;/li>
&lt;/ol>
&lt;h4 id="install-from-debian-distribution">Install From Debian distribution&lt;/h4>
&lt;ol>
&lt;li>Download your desired &lt;a href="https://github.com/streamthoughts/jikkou/releases">version&lt;/a>&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ wget https://github.com/streamthoughts/jikkou/releases/download/0.12.2/jikkou.deb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ sudo dpkg -i jikkou.deb
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>From there, you should be able to run the client: &lt;code>jikkou help&lt;/code>.&lt;/p>
&lt;div class="alert alert-info" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Jikkou will install itself in the directory : &lt;code>/opt/jikkou&lt;/code>
&lt;/div>
&lt;p>It is recommended to install the bash/zsh completion script &lt;code>jikkou_completion&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>wget https://raw.githubusercontent.com/streamthoughts/jikkou/master/jikkou_completion . jikkou_completion
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>or alternatively, run the following command for generation the completion script.&lt;/p>
&lt;pre tabindex="0">&lt;code>$ source &amp;lt;(jikkou generate-completion)
&lt;/code>&lt;/pre>&lt;h2 id="development-builds">Development Builds&lt;/h2>
&lt;p>In addition to releases you can download or install development snapshots of Jikkou.&lt;/p>
&lt;h3 id="from-docker-hub">From Docker Hub&lt;/h3>
&lt;p>Docker images are built and push to &lt;a href="https://hub.docker.com/r/streamthoughts/jikkou">Docker Hub&lt;/a> from the latest &lt;code>main&lt;/code> branch.
They are not official releases, and may not be stable.
However, they offer the opportunity to test the cutting edge features.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ docker run -it streamthoughts/jikkou:master
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="from-source-linux-macos">From Source (Linux, macOS)&lt;/h3>
&lt;p>Building Jikkou from source is slightly more work, but is the best way to go if you want to test the latest (pre-release) Jikkou version.&lt;/p>
&lt;h4 id="prerequisites">Prerequisites&lt;/h4>
&lt;p>You must have a working Java environment with a JDK 17 (i.e. &lt;code>$JAVA_HOME&lt;/code> environment variable is configured).&lt;/p>
&lt;h4 id="build-tarball--debian-packages">Build Tarball / Debian packages&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ git clone https://github.com/streamthoughts/jikkou.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ &lt;span style="color:#204a87">cd&lt;/span> jikkou
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ./mvnw clean package -DskipTests -Pdist
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then, distributions will be available in the &lt;code>./dist&lt;/code> directory:&lt;/p>
&lt;pre tabindex="0">&lt;code>.
â”œâ”€â”€ jikkou-&amp;lt;VERSION&amp;gt;-runner
â”‚ â””â”€â”€ jikkou-&amp;lt;VERSION&amp;gt;-runner
â”‚ â”œâ”€â”€ bin
â”‚ â”‚ â”œâ”€â”€ jikkou
â”‚ â”‚ â””â”€â”€ jikkou.bat
â”‚ â”œâ”€â”€ etc
â”‚ â”‚ â””â”€â”€ logback.xml
â”‚ â”œâ”€â”€ jikkou_completion
â”‚ â”œâ”€â”€ lib
â”‚ â”‚ â””â”€â”€ jikkou-runner.jar
â”‚ â”œâ”€â”€ LICENSE
â”‚ â””â”€â”€ README.adoc
â”œâ”€â”€ jikkou-&amp;lt;VERSION&amp;gt;-runner.tar.gz
â”œâ”€â”€ jikkou-&amp;lt;VERSION&amp;gt;-runner.zip
â””â”€â”€ jikkou.deb
&lt;/code>&lt;/pre>&lt;h4 id="build-rpm">Build RPM&lt;/h4>
&lt;p>In addition to that, you may need to install Jikkou from a &lt;em>RPM&lt;/em> package. For doing that, you can run the following commands:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ ./mvnw clean package -DskipTests -Prpm
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The RPM package will available in the &lt;code>./target/rpm/jikkou/RPMS/noarch/&lt;/code> directory.&lt;/p></description></item><item><title>Docs: Using Jikkou</title><link>https://streamthoughts.github.io/jikkou/docs/introducion/using_jikkou/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://streamthoughts.github.io/jikkou/docs/introducion/using_jikkou/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>This guide explains the basics of using Jikkou to manage resource entities on your Apache Kafka cluster.
It assumes that you have already installed the &lt;a href="./_installation.md">Jikkou&lt;/a> client. If you are simply interested in running a few quick commands, you may wish to begin with the &lt;a href="./_getting_started.md">Quickstart Guide&lt;/a>. This chapter covers the particulars of Jikkou commands, and explains how to configure and use Jikkou.&lt;/p>
&lt;/div>
&lt;h2 id="jikkou-architecture">Jikkou Architecture&lt;/h2>
&lt;h3 id="components">Components&lt;/h3>
&lt;p>Jikkou is a tool which is implemented into two distinct parts:&lt;/p>
&lt;ul>
&lt;li>The Jikkou Client is a command-line client for end users.&lt;/li>
&lt;li>The Jikkou Java Library provides the logic for executing all operations the Apache Kafka cluster.&lt;/li>
&lt;/ul>
&lt;p>The Jikkou library is available on &lt;a href="https://mvnrepository.com/artifact/io.streamthoughts/jikkou">Maven Central&lt;/a>&lt;/p>
&lt;p>&lt;strong>For Maven:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;lt;groupId&amp;gt;&lt;/span>io.streamthoughts&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;lt;artifactId&amp;gt;&lt;/span>jikkou&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;lt;version&amp;gt;&lt;/span>${jikkou.version}&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="implementation">Implementation&lt;/h3>
&lt;p>The Jikkou client and library are written in the Java programming language.&lt;/p>
&lt;p>It is built on top of the Kafka&amp;rsquo;s &lt;a href="https://kafka.apache.org/30/javadoc/org/apache/kafka/clients/admin/Admin.html">Java AdminClient&lt;/a>.
Thus, it works out-of-the-box with most the Apache Kafka distributions and cloud provider managed services (e.g., &lt;a href="https://aiven.io/">Aiven&lt;/a>, &lt;a href="https://confluent.cloud/">Confluent Cloud&lt;/a>, etc).&lt;/p>
&lt;p>The tool is completely &lt;strong>stateless&lt;/strong> and thus does not store any state. Basically: &lt;em>Your kafka cluster is the state of Jikkou&lt;/em>.&lt;/p>
&lt;p>Configuration files are written in &lt;a href="https://yaml.org/">YAML&lt;/a>.&lt;/p>
&lt;h2 id="cli-usage">CLI Usage&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ jikkou &lt;span style="color:#204a87">help&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Usage:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>jikkou &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>-hV&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>--bootstrap-servers&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;bootstrapServer&amp;gt;&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>--command-config&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;clientCommandConfig&amp;gt;&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>--config-file&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;configFile&amp;gt;&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>--command-property&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>String&amp;gt;&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>... &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>COMMAND&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Description:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CLI to ease and automate Apache Kafka cluster configuration management.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Options:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --bootstrap-servers&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;bootstrapServer&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> A list of host/port pairs to use &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> establishing the initial connection to the Kafka cluster.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --command-config&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;clientCommandConfig&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> A property file containing configs to be passed to Admin Client &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>warning: this option is only relevant &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> your are using the AdminClient
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> based KafkaResourceManager&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --command-property&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>String&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> A &lt;span style="color:#000">KEY&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>VALUE property to be passed to the Admin Client &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>warning: this option is only relevant &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> your are using the AdminClient based
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> KafkaResourceManager&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --config-file&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;configFile&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> The configuration file.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -h, --help Show this &lt;span style="color:#204a87">help&lt;/span> message and exit.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -V, --version Print version information and exit.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Commands:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> validate Validate your specification file.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> topics Apply the Topic changes described by your specs-file against the Kafka cluster you are currently pointing at.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> acls Apply the ACLs changes described by your specs-file against the Kafka cluster you are currently pointing at.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> brokers Apply the broker configuration changes described by your specs-file against the Kafka cluster you are currently pointing at.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> quotas Apply the quotas changes described by your specs-file against the Kafka cluster you are currently pointing at.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> extensions List all extensions available.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> config Sets or retrieves the configuration of this client.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87">help&lt;/span> Displays &lt;span style="color:#204a87">help&lt;/span> information about the specified &lt;span style="color:#204a87">command&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="configuration">Configuration&lt;/h2>
&lt;p>Jikkou uses the Java Admin client API for interacting with the target Apache Kafka cluster.&lt;/p>
&lt;p>You can set the configs to be passed to Admin Client using the command-line arguments:&lt;/p>
&lt;ul>
&lt;li>&lt;code>--command-config&lt;/code>: A property file containing configs to be passed to Admin Client&lt;/li>
&lt;li>&lt;code>--command-property&lt;/code>: A KEY=VALUE property to be passed to the Admin Client.&lt;/li>
&lt;/ul>
&lt;p>Additionally, Jikkou will lookup for an &lt;a href="https://github.com/lightbend/config">HOCON (Human-Optimized Config Object Notation)&lt;/a> file named &lt;code>application.conf&lt;/code> in the following locations:&lt;/p>
&lt;ul>
&lt;li>&lt;code>./application.conf&lt;/code>&lt;/li>
&lt;li>&lt;code>$HOME/.jikkou/application.conf&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>Depending on the configuration properties you will override, Jikkou will always fallback to its reference default configuration (see &lt;a href="https://github.com/streamthoughts/jikkou/blob/master/src/main/resources/reference.conf">reference.conf&lt;/a>).&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-hocon" data-lang="hocon">jikkou {
# The KafkaResourceManager classes and configurations used for managing kafka resources
managers {
kafka {
brokers {
type = io.streamthoughts.jikkou.api.manager.kafka.AdminClientKafkaBrokerManager
config = {
adminClient = ${jikkou.adminClient}
kafka.brokers = ${jikkou.kafka.brokers}
}
}
topics {
type = io.streamthoughts.jikkou.api.manager.kafka.AdminClientKafkaTopicManager
config = {
adminClient = ${jikkou.adminClient}
kafka.brokers = ${jikkou.kafka.brokers}
}
}
acls {
type = io.streamthoughts.jikkou.api.manager.kafka.AdminClientKafkaAclsManager
config = {
adminClient = ${jikkou.adminClient}
kafka.brokers = ${jikkou.kafka.brokers}
}
}
quotas {
type = io.streamthoughts.jikkou.api.manager.kafka.AdminClientKafkaQuotasManager
config = {
adminClient = ${jikkou.adminClient}
kafka.brokers = ${jikkou.kafka.brokers}
}
}
}
}
# The default Kafka AdminClient configuration
adminClient {
bootstrap.servers = ${?JIKKOU_DEFAULT_KAFKA_BOOTSTRAP_SERVERS}
}
# The paths from which to load extensions
extension.paths = [${?JIKKOU_EXTENSION_PATH}]
kafka {
brokers {
# If &amp;#39;True&amp;#39;
wait-for-enabled = true
wait-for-enabled = ${?JIKKOU_KAFKA_BROKERS_WAIT_FOR_ENABLED}
# The minimal number of broker that should be alive for the interceptor stops waiting.
wait-for-min-available = 1
wait-for-min-available = ${?JIKKOU_KAFKA_BROKERS_WAIT_FOR_MIN_AVAILABLE}
# The amount of time to wait before verifying that brokers are available.
wait-for-retry-backoff-ms = 1000
wait-for-retry-backoff-ms = ${?JIKKOU_KAFKA_BROKERS_WAIT_FOR_RETRY_BACKOFF_MS}
# Wait until brokers are available or this timeout is reached.
wait-for-timeout-ms = 60000
wait-for-timeout-ms = ${?JIKKOU_KAFKA_BROKERS_WAIT_FOR_TIMEOUT_MS}
}
}
# The regex patterns to use for including resources.
include-resources = []
# The regex patterns to use for excluding resources.
exclude-resources = []
template {
values {
}
}
# The default validation rules to apply on any specification files.
validations = [
{
type = io.streamthoughts.jikkou.api.validations.TopicConfigKeysValidation
config = {}
},
{
type = io.streamthoughts.jikkou.api.validations.TopicNameRegexValidation
config = {
topic-name-regex = &amp;#34;[a-zA-Z0-9\\._\\-]+&amp;#34;
topic-name-regex = ${?VALIDATION_DEFAULT_TOPIC_NAME_REGEX}
}
},
{
type = io.streamthoughts.jikkou.api.validations.TopicMinNumPartitionsValidation
config = {
topic-min-num-partitions = 1
topic-min-num-partitions = ${?VALIDATION_DEFAULT_TOPIC_MIN_NUM_PARTITIONS}
}
},
{
type = io.streamthoughts.jikkou.api.validations.TopicMinReplicationFactorValidation
config = {
topic-min-replication-factor = 1
topic-min-replication-factor = ${?VALIDATION_DEFAULT_TOPIC_MIN_REPLICATION_FACTOR}
}
}
]
# The default transformations to apply on any specification files.
transforms = []
}
&lt;/code>&lt;/pre>
&lt;div class="alert alert-info" role="alert">
&lt;h4 class="alert-heading">Tips&lt;/h4>
To debug the configuration use byu Jikkou, you can run the following command: &lt;code>jikkou config get --comments&lt;/code>
&lt;/div></description></item></channel></rss>