<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jikkou â€“ Resources</title>
    <link>https://streamthoughts.github.io/jikkou/docs/user-guide/resources/</link>
    <description>Recent content in Resources on Jikkou</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://streamthoughts.github.io/jikkou/docs/user-guide/resources/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Core</title>
      <link>https://streamthoughts.github.io/jikkou/docs/user-guide/resources/core/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://streamthoughts.github.io/jikkou/docs/user-guide/resources/core/</guid>
      <description>
        
        
        

&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
&lt;p&gt;Here, you will find the list of core resources supported for Jikkou.&lt;/p&gt;

&lt;/div&gt;

&lt;h2 id=&#34;resources&#34;&gt;Resources&lt;/h2&gt;
&lt;p&gt;More information:&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Apache Kafka</title>
      <link>https://streamthoughts.github.io/jikkou/docs/user-guide/resources/kafka/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://streamthoughts.github.io/jikkou/docs/user-guide/resources/kafka/</guid>
      <description>
        
        
        

&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
&lt;p&gt;Here, you will find the list of resources supported for Apache Kafka.&lt;/p&gt;

&lt;/div&gt;

&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The Apache Kafka extension is built on top of the Kafka Admin Client. You can configure the properties to be passed to
kafka client
through the Jikkou client configuration property &lt;code&gt;jikkou.kafka.client&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-hocon&#34; data-lang=&#34;hocon&#34;&gt;jikkou {
  kafka {
    client {
      bootstrap.servers = &amp;#34;localhost:9092&amp;#34;
      security.protocol = &amp;#34;SSL&amp;#34;
      ssl.keystore.location = &amp;#34;/tmp/client.keystore.p12&amp;#34;
      ssl.keystore.password = &amp;#34;password&amp;#34;
      ssl.keystore.type = &amp;#34;PKCS12&amp;#34;
      ssl.truststore.location = &amp;#34;/tmp/client.truststore.jks&amp;#34;
      ssl.truststore.password = &amp;#34;password&amp;#34;
      ssl.key.password = &amp;#34;password&amp;#34;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In addition, the extension support configuration settings to wait for at least a minimal number of brokers before
processing.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-hocon&#34; data-lang=&#34;hocon&#34;&gt;jikkou {
  kafka {
    brokers {
      # If &amp;#39;True&amp;#39; 
      wait-for-enabled = true
      wait-for-enabled = ${?JIKKOU_KAFKA_BROKERS_WAIT_FOR_ENABLED}
      # The minimal number of brokers that should be alive for the CLI stops waiting.
      wait-for-min-available = 1
      wait-for-min-available = ${?JIKKOU_KAFKA_BROKERS_WAIT_FOR_MIN_AVAILABLE}
      # The amount of time to wait before verifying that brokers are available.
      wait-for-retry-backoff-ms = 1000
      wait-for-retry-backoff-ms = ${?JIKKOU_KAFKA_BROKERS_WAIT_FOR_RETRY_BACKOFF_MS}
      # Wait until brokers are available or this timeout is reached.
      wait-for-timeout-ms = 60000
      wait-for-timeout-ms = ${?JIKKOU_KAFKA_BROKERS_WAIT_FOR_TIMEOUT_MS}
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;apache-kafka-resources&#34;&gt;Apache Kafka Resources&lt;/h2&gt;
&lt;p&gt;More information:&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
